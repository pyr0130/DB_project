# Generated by Django 2.2.2 on 2019-06-12 09:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('code', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('debut', models.CharField(blank=True, max_length=4, null=True)),
                ('birth', models.DateField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'events_artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Concert',
            fields=[
                ('code', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('genre', models.CharField(blank=True, max_length=7, null=True)),
                ('rating', models.TextField(blank=True, null=True)),
                ('poster', models.CharField(blank=True, max_length=100, null=True)),
                ('during', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'events_concert',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hall',
            fields=[
                ('code', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('contact', models.CharField(blank=True, max_length=13, null=True)),
                ('homepage', models.CharField(blank=True, max_length=200, null=True)),
                ('si', models.TextField(blank=True, null=True)),
                ('gu', models.TextField(blank=True, null=True)),
                ('dong', models.TextField(blank=True, null=True)),
                ('ro', models.TextField(blank=True, null=True)),
                ('gibun', models.TextField(blank=True, null=True)),
                ('others', models.TextField(blank=True, null=True)),
                ('name', models.TextField()),
            ],
            options={
                'db_table': 'events_hall',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('code', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('homepage', models.CharField(blank=True, max_length=200, null=True)),
                ('contact', models.CharField(blank=True, max_length=13, null=True)),
            ],
            options={
                'db_table': 'events_sponsor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('email', models.CharField(max_length=254, primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=12)),
                ('name', models.TextField()),
                ('sex', models.CharField(max_length=2)),
                ('contact', models.CharField(max_length=13)),
                ('birth', models.DateField()),
                ('coin', models.IntegerField()),
            ],
            options={
                'db_table': 'events_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('email', models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.User')),
                ('booked_at', models.CharField(blank=True, max_length=254, null=True)),
                ('coin', models.IntegerField(blank=True, null=True)),
                ('section', models.TextField(blank=True, null=True)),
                ('number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'events_book',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fartist',
            fields=[
                ('email', models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.User')),
            ],
            options={
                'db_table': 'events_fartist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fconcert',
            fields=[
                ('email', models.ForeignKey(db_column='email', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.User')),
            ],
            options={
                'db_table': 'events_fconcert',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('artist', models.ForeignKey(db_column='artist', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.Artist')),
                ('member', models.TextField()),
            ],
            options={
                'db_table': 'events_member',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Perform',
            fields=[
                ('artist', models.ForeignKey(db_column='artist', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.Artist')),
            ],
            options={
                'db_table': 'events_perform',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('concert', models.ForeignKey(db_column='concert', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.Concert')),
                ('date', models.DateField()),
                ('time', models.CharField(blank=True, max_length=254, null=True)),
            ],
            options={
                'db_table': 'events_schedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('concert', models.ForeignKey(db_column='concert', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.Concert')),
                ('section', models.TextField()),
                ('number', models.IntegerField()),
            ],
            options={
                'db_table': 'events_seat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('concert', models.ForeignKey(db_column='concert', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='events.Concert')),
                ('rating', models.TextField()),
                ('price', models.IntegerField()),
            ],
            options={
                'db_table': 'events_ticket',
                'managed': False,
            },
        ),
    ]
